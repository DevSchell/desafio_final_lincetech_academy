import 'participant.dart';

/// Represents a review for a specific stopover.
///
/// Every stopover is associated with a list of reviews, each containing
/// a message, the author, and an optional photo.
class Review {
  /// The unique identifier for the review.
  /// This field is nullable because the ID is generated by the database
  /// after the review is first created.
  final int? reviewID;

  /// The main text content of the review.
  /// This field is required to provide the feedback or commentary.
  final String message;

  /// The foreign key that links this review to its corresponding stopover.
  /// This field is required to associate a review with a specific location.
  final int stopoverId;

  /// The file path for a photo associated with the review.
  /// This can be used to visually complement the text message.
  String photoPath;

  final int participantId;

  /// Constructs a [Review] instance.
  ///
  /// The [reviewID] is optional and is used to identify existing reviews.
  /// All other fields are required
  /// to create a new, complete review.
  Review({
    this.reviewID,
    required this.message,
    required this.participantId,
    required this.stopoverId,
    required this.photoPath,
  });

  Map<String, dynamic> toMap() {
    return {
      'id': reviewID,
      'stopover_id': stopoverId,
      'participant_id': participantId,
      'message': message,
      'photo_path': photoPath,
    };
  }

  factory Review.fromMap(Map<String, dynamic> map) {
    return Review(
      reviewID: map['id'] as int?,
      stopoverId: map['stopover_id'] as int,
      participantId: map['participant_id'],
      message: map['message'] as String,
      photoPath: map['photo_path'] as String,
    );
  }
}
